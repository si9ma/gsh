import (
	"os"
)

// user-defined project should implements:
type projObj interface {
	initProj()
	MainEntry()
}

// Proj is project class of this ClassFile project.
type Proj struct {
	Stdout io.Writer
	Stderr io.Writer
	Stdin  io.Reader
}

func (p *Proj) initProj() {
	// you can do some initialization here:
	p.Stdin = os.Stdin
	p.Stdout = os.Stdout
	p.Stderr = os.Stderr
}

func (p *Proj) execCmd(name string, arg ...string) error {
	cmd := exec.Command(name, args)
	cmd.Stdin = p.Stdin
	cmd.Stdout = p.Stdout
	cmd.Stderr = p.Stderr
	return cmd.Run()
}

func (p *Proj) Rmdir(args ...string) error {
	return p.execCmd("rmdir", args...)
}

func (p *Proj) Mkdir(args ...string) error {
	return p.execCmd("mkdir", args...)
}

func (p *Proj) Ls(args ...string) error {
	return p.execCmd("ls", args...)
}

// Gopt_Proj_Main is main entry of this ClassFile project.
func Gopt_Proj_Main(proj projObj) {
	proj.initProj()

	// call MainEntry of user code:
	proj.(interface{ MainEntry() }).MainEntry()
}
